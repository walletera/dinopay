/*
 * DinoPay API
 *
 * This API allows sending and receiving payment through the DinoPay platform.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PaymentUpdated A payment was updated
type PaymentUpdated struct {
	Payment Payment `json:"payment"`
}

// NewPaymentUpdated instantiates a new PaymentUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentUpdated(payment Payment, ) *PaymentUpdated {
	this := PaymentUpdated{}
	this.Payment = payment
	return &this
}

// NewPaymentUpdatedWithDefaults instantiates a new PaymentUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentUpdatedWithDefaults() *PaymentUpdated {
	this := PaymentUpdated{}
	return &this
}

// GetPayment returns the Payment field value
func (o *PaymentUpdated) GetPayment() Payment {
	if o == nil  {
		var ret Payment
		return ret
	}

	return o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value
// and a boolean to check if the value has been set.
func (o *PaymentUpdated) GetPaymentOk() (*Payment, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Payment, true
}

// SetPayment sets field value
func (o *PaymentUpdated) SetPayment(v Payment) {
	o.Payment = v
}

func (o PaymentUpdated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["payment"] = o.Payment
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentUpdated struct {
	value *PaymentUpdated
	isSet bool
}

func (v NullablePaymentUpdated) Get() *PaymentUpdated {
	return v.value
}

func (v *NullablePaymentUpdated) Set(val *PaymentUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentUpdated(val *PaymentUpdated) *NullablePaymentUpdated {
	return &NullablePaymentUpdated{value: val, isSet: true}
}

func (v NullablePaymentUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


