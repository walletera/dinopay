openapi: "3.0.0"
info:
  title: "DinoPay API"
  description: "This API allows sending and receiving payment through the DinoPay platform."
  version: "1.0.0"
paths:
  /payments:
    post:
      summary: "Create a new payment"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment"
              example:
                id: bb17667e-daac-41f6-ada3-2c22f24caf22
                amount: 100
                currency: USD
                sourceAccount:
                  accountHolder: john doe
                  accountNumber: IE12BOFI90000112345678
                destinationAccount:
                  accountHolder: jane doe
                  accountNumber: IE12BOFI90000112349876
                status: pending
                customerTransactionId: 9713ec22-cf8d-4a21-affb-719db00d7388
                createdAt: '2023-07-07T19:31:11Z'
                updatedAt: '2023-07-07T19:31:11Z'
        "400":
          description: "The provided parameters are incorrect"
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/errorMessage"
      tags:
      - "payments"
  /webhooks/subscriptions:
    post:
      summary: "Subscribe to events"
      description: ""
      operationId: ""
      tags:
      - "payments"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                callbackUrl:
                  type: "string"
                  format: "uri"
                  example: "https://myserver.com/send/callback/here"
                eventType:
                  type: "string"
              required:
              - "callbackUrl"
              - "eventType"
      responses:
        "201":
          description: "Webhook created"
      callbacks:
        eventOccurred:
          callbackUrl:
            post:
              requestBody:
                description: "Notifies that a new event occured"
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/event"
              responses:
                "200":
                  description: "Return a 200 status to indicate that the data was\
                    \ received successfully"
components:
  schemas:
    errorMessage:
      type: "string"
      maxLength: 256
      description: "A text message describing an error"
    payment:
      type: "object"
      description: "A transfer of money from a source account to a destination account"
      properties:
        id:
          type: "string"
          description: "Payment UUID"
        amount:
          type: "number"
          description: "Payment amount"
        currency:
          type: "string"
          description: "Payment currency"
        sourceAccount:
          type: "$ref"
          $ref: "#/components/schemas/account"
          description: "Details of the debtor's account"
        destinationAccount:
          type: "$ref"
          $ref: "#/components/schemas/account"
          description: "Details of the beneficiary's account"
        status:
          type: "$ref"
          $ref: "#/components/schemas/paymentStatus"
          description: "Payment status"
        customerTransactionId:
          type: "string"
          description: "A unique id generated by the customer for this payment"
        createdAt:
          type: "integer"
          description: "Date and time when the payment was created expressed as a Unix timestamp"
        updatedAt:
          type: "integer"
          description: "Date and time when of the last update made to the payment expressed as a Unix timestamp"
      required:
      - "amount"
      - "sourceAccount"
      - "destinationAccount"
    account:
      type: "object"
      description: "A DinoPay account"
      properties:
        accountHolder:
          type: "string"
          description: "Name of the account owner of the account"
        accountNumber:
          type: "string"
          description: "Number that identifies the account"
      required:
      - "accountHolder"
      - "accountNumber"
    paymentStatus:
      type: "string"
      enum:
      - "pending"
      - "confirmed"
      - "rejected"
      description: "Status of the payment"
    event:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Event UUID"
        type:
          type: "string"
          description: "The event type"
        time:
          type: "string"
          description: "Timestamp of when the occurrence happened"
        data:
          type: "object"
          description: "Event payload"
          oneOf:
          - $ref: "#/components/schemas/paymentUpdated"
          - $ref: "#/components/schemas/paymentCreated"
      description: "A payment was updated"
      required:
      - "id"
      - "type"
      - "time"
      - "data"
    paymentCreated:
      type: "object"
      description: "A new payment was created"
      properties:
        payment:
          type: "$ref"
          $ref: "#/components/schemas/payment"
      required:
      - "payment"
    paymentUpdated:
      type: "object"
      description: "A payment was updated"
      properties:
        payment:
          type: "$ref"
          $ref: "#/components/schemas/payment"
      required:
      - "payment"
tags:
- name: "payments"
  description: "Payments API"
  externalDocs:
    description: ""
    url: ""
